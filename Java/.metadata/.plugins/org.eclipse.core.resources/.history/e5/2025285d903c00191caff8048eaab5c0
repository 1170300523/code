import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;

import javax.security.auth.kerberos.KerberosKey;

public class magic {
	
	public boolean isLegalMagicSquare(String fileName)
	{
		boolean flag = true;
		try {
			BufferedReader in = new BufferedReader(  
					new InputStreamReader( 
							new FileInputStream(fileName)));
				
				String line;
				try {
					
					if((line = in.readLine()) != null) {
						String[] arr = line.split("\t");
						int len = arr.length;
						int[][] num =  new int[len][len];
						
						for(int k = 0;k<len;k++){
							for(int i =0;i<len;i++)
							{
								num[k][i] = Integer.parseInt(arr[i]);
							}
							if((line = in.readLine()) != null)
							arr = line.split("\t");
						}
						
						for(int i=0;i<len;i++)
						{
							
						}
						
						
					}
					in.close();
				} catch (IOException e) {
					e.printStackTrace();
				}

		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} 
		
		
		
		return flag;
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
//		System.out.println("ok");
		magic judge = new magic();
		judge.isLegalMagicSquare("1.txt");

	}

}
